(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{227:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"订单和payment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#订单和payment","aria-hidden":"true"}},[e._v("#")]),e._v(" 订单和payment")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("分析原来的AAA站点")])]),e._v(" "),a("li",[a("p",[e._v("github demo , 关键字 vue payment\n"),a("code",[e._v("https://github.com/search?utf8=%E2%9C%93&q=vue+payment&type=")])])])]),e._v(" "),a("h2",{attrs:{id:"修复购物车总价-显示长串小数问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复购物车总价-显示长串小数问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 修复购物车总价, 显示长串小数问题")]),e._v(" "),a("p",[e._v("根本原因是因为计算机精度问题 ,  最终的解决方式是 , 把"),a("code",[e._v("产品价格 * 100")]),e._v("  得到整数   ,    结果一定是整数,    然后把"),a("code",[e._v("结果 /100")])]),e._v(" "),a("p",[e._v("或者理解为先以分为单位整数计算,   最后把分 / 100 得到,  小数点后保留两位的金额")]),e._v(" "),a("p",[e._v("另外就是还要防止 , 原始金额如果是 小数点后3位的话, 还是可能得到小数, 所以 value.toFixed(2)")]),e._v(" "),a("h2",{attrs:{id:"结账页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结账页面","aria-hidden":"true"}},[e._v("#")]),e._v(" 结账页面")]),e._v(" "),a("ol",[a("li",[e._v("先按AAA站点定义地址需要的数据")])]),e._v(" "),a("p",[e._v("Billing address")]),e._v(" "),a("p",[e._v("shipping address")]),e._v(" "),a("p",[e._v("// Billing address , 下面这些字段都是必须  "),a("code",[e._v("Note: Fields marked with <em>&#8226;</em> are required.")])]),e._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\n<label for="firstName">Full name</label>\n<input type="text" class="input_text"  name="<?=$_SESSION[\'cgpkmap\'][\'bill_name\']?>" value="<?=$$_SESSION[\'cgpkmap\'][\'bill_name\']?>" onblur="on_bill_name(this)" >\n<em> &#8226;</em>\n\n<label for="email">Email address</label>\n<input type="text" class="input_text"  name="<?=$_SESSION[\'cgpkmap\'][\'bill_email\']?>" value="<?=$$_SESSION[\'cgpkmap\'][\'bill_email\']?>" ><em> &#8226;</em>\n\n<label for="street">Street address</label>\n<input type="text" class="input_text"  name="bill_street" value="<?=$bill_street?>" ><em> &#8226;</em>\n\n<label for="city">City</label>\n<input type="text" class="input_text" name="bill_city" value="<?=$bill_city?>" ><em> &#8226;</em>\n\n<label for="state">State</label>\n<select name="bill_state" onchange="on_bill_state(this)">\n<option value=""></option>\n</select><em> &#8226;</em>\n\n\n<label for="bill_zip">Zip code / Post code</label>\n<input type="text" class="input_text"  name="bill_zip" value="<?=$bill_zip?>"  onblur="on_bill_zip(this)"><em> &#8226;</em>\n\n\n<label for="country">Country</label>\n<select name="bill_country" <?if(!no_echeck_meds()){?> onChange=\'getBillCountry(this.value); return false\'<?}?>>\n<option>\n</select><em> &#8226;</em>\n\n\n<label for="firstName">Telephone</label>\n<input type="text" class="input_text"  name="bill_phone" value="<?=$bill_phone?>" onblur="on_bill_phone(this)" maxlength="14"><em> &#8226;</em>\n\n')])])]),a("p",[e._v("// Shipping Address")]),e._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\n<label for="firstName">Full name</label>\n<input type="text" class="input_text"  name="ship_name" value="<?=$ship_name?>" ><em> &#8226;</em>\n\n\n<label for="email">Email address</label>\n<input type="text" class="input_text" name="ship_email" value="<?=$ship_email?>" ><em> &#8226;</em>\n\n\n<label for="street">Street address</label>\n<input type="text" class="input_text"  name="ship_street" value="<?=$ship_street?>" >\x3c!-- <em> &#8226;</em>\n\n\n<label for="city">City</label>\n<input type="text" class="input_text"  name="ship_city" value="<?=$ship_city?>" ><em> &#8226;</em>\n\n\n<label for="state">State</label>\n<select name="ship_state">\n<option value=""></option>\n</select><em> &#8226;</em>\n\n\n\n<label for="firstName">Zip code / Post code</label>\n<input type="text" class="input_text"  name="ship_zip" value="<?=$ship_zip?>" ><em> &#8226;</em>\n\n\n<label for="country">Country</label>\n<td><select name="ship_country"  >\n</select><em> &#8226;</em>\n\n\n<label for="firstName">Telephone</label>\n<input type="text" class="input_text"  name="ship_phone" value="<?=$ship_phone?>" maxlength="14"><em> &#8226;</em>\n')])])]),a("p",[e._v("可见地址都是8个字段, 所以 Shipping Address 和 billing Address 可以都用同样的数据类型")]),e._v(" "),a("h2",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips","aria-hidden":"true"}},[e._v("#")]),e._v(" TIPs")]),e._v(" "),a("h2",{attrs:{id:"小数精度问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小数精度问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 小数精度问题")]),e._v(" "),a("p",[e._v("js的小数精度问题, 是因为计算机的处理数字只能是二进制 , 而二进制在表示小数的时候, 就有精度丢失")]),e._v(" "),a("p",[e._v("http://elevenbeans.github.io/2017/07/07/floating-point-issue/")]),e._v(" "),a("p",[e._v("小数的二进制表示  "),a("code",[e._v("https://zhidao.baidu.com/question/59020505.html")])]),e._v(" "),a("p",[e._v("如: 0.625 用二进制表示")]),e._v(" "),a("ol",[a("li",[e._v("取小数部分 0.625 * 2 得到 1.25  --------   取整数部分1  , 小数点后 第1位: 1")]),e._v(" "),a("li",[e._v("去1.25的小数部分   0.25 * 2 = 0.50   -------- 取整数部分0 , 小数点后第2位: 0")]),e._v(" "),a("li",[e._v("0.50 取小数部分    0.50 * 2 = 1.00  ---------- 取整数部分1, 取1  , 且小数点后面为 0 , 换算结束.  于是精度没有丢失")])]),e._v(" "),a("p",[e._v("结果为  0.101    验算:  1/2 + 1/8 = 0.625 精度没有丢失")]),e._v(" "),a("p",[e._v("但 十进制小数 0.1 , 转为二进制表示的时候")]),e._v(" "),a("p",[e._v("结果是: 0.00011   ,    这个结果转换为十进制 = 1/16 + 1/32 = 0.09375")]),e._v(" "),a("p",[e._v("精度再大点,  结果是循环小数 0.0001100110011 , 后面的0011 一直循环 ,")]),e._v(" "),a("p",[e._v("转为十进制 1/16 + 1/32 + 1/256 + 1/512 + 1/4096 + 1/8192 = 0.0999755859375")]),e._v(" "),a("p",[e._v("就是说始终都是和"),a("code",[e._v("0.1")]),e._v("有误差的  那么怎么解决呢")]),e._v(" "),a("p",[e._v("0.1+0.4 的结果是 0.5 ，没有问题，是不是啪啪啪打脸了？怎么解释？\n这种情况，首先 0.5 本身是可以精确地表示为二进制浮点数的 0.1；其次输入的两个数字中的舍入误差可能相互抵消，但不一定会抵消。")]),e._v(" "),a("p",[e._v("如果你真的需要在你的代码中做浮点数的四则运算或者大小判断，特别是当你处理钱时，可以使用一个特殊的 decimal type 如 BigDecimal。\n如果您不想看到所有这些额外的小数位数：在显示时，也可以用toFixed()或toPrecision() 之类将结果格式化为固定的小数位数。")]),e._v(" "),a("h2",{attrs:{id:"地址组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#地址组件","aria-hidden":"true"}},[e._v("#")]),e._v(" 地址组件")]),e._v(" "),a("p",[e._v("国家信息的接口")]),e._v(" "),a("p",[e._v("测试接口地址")]),e._v(" "),a("p",[a("code",[e._v("http://pharmacy-backend.lindoit.com:8082/test-data/state-country")])]),e._v(" "),a("p",[e._v("JSONP")]),e._v(" "),a("p",[a("code",[e._v("http://pharmacy-backend.lindoit.com:8082/test-data/api-state-country")])]),e._v(" "),a("p",[e._v("用户地址表单组件里面比较麻烦的一个是 select的国家信息数据来源 , 还有一个是用户提交的信息的保存")]),e._v(" "),a("p",[e._v("现在是把国家和州信息通过接口访问获取 , 如果这部分数据没有什么变化的话, 可以静态化 , 免得放在store里面远程获取毕竟没有静态化稳定")]),e._v(" "),a("p",[e._v("用户提交的信息的保存依然用的是localstorage ,")]),e._v(" "),a("p",[a("code",[e._v("src/store/country_state")]),e._v("      ---  国家, 州的信息获取\n"),a("code",[e._v("src/store/order_address")]),e._v("      ---  订单地址信息数据的获取, 设置和保存\n"),a("code",[e._v("components/checkout_address")]),e._v("   --- 地址信息表单")]),e._v(" "),a("p",[e._v("且需要注意的是 billing_address 和shipping address  是可以结合在一起的")]),e._v(" "),a("p",[e._v("这里主要是使用element form ,    数据, 依然是使用store, 最后把用户提交的表单保存在localStorage中 类似cart 保存")]),e._v(" "),a("h2",{attrs:{id:"select-组件使用的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-组件使用的问题","aria-hidden":"true"}},[e._v("#")]),e._v(" select 组件使用的问题")]),e._v(" "),a("p",[e._v("element 的select 组件, 在我们使用中有显示上的问题")]),e._v(" "),a("p",[e._v("当表单提交的时候, 通过调试工具, 可以看到"),a("code",[e._v("select")]),e._v("是可以取到值的, 提交的数据也是正常的,  但是select 本身却不显示选择的选项 ,  而是显示的为空")]),e._v(" "),a("p",[e._v("后来调试很久发现是数据定义的问题 ,")]),e._v(" "),a("p",[e._v("当数据定义在"),a("code",[e._v("computed")]),e._v("像下面这样的话,  select就不正常 , 如果 在"),a("code",[e._v("data")]),e._v("里面直接返回就是正常的 "),a("code",[e._v("billing_address : createAddress(),")])]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("      "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("billing_address")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("createAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),a("p",[e._v("到后来, 我们把数据和localStorage结合起来, 通过getter映射过来, 也是在computed里面, 却也是正常的, 原因没有找到, 但总归有点问题, 记录一下")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mapGetters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"address_countries_states"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"addressCountriesStates_getter"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"countryStateLoaded"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"countryStateLoaded_getter"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"billing_address"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"billingAddress_getter"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])])])}],!1,null,null,null);t.default=n.exports}}]);